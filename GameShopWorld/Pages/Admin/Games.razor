@page "/admin/games"
@page "/admin"
@inherits OwningComponentBase<IGameShopWorldRepository>
<table class="table table-sm table-striped table-bordered">
<thead>
<tr>
<th>Thứ tự</th>
<th>Tên Game</th>
<th>Thể Loại</th>
<th>Gía Bán</th>
<td />
</tr>
</thead><tbody>
@if (GameData?.Count() > 0)
{
@foreach (Game b in GameData)
{
<tr>
<td>@b.GameID
<img src="~/HinhAnh/dying-light.png"/></td>
<td>@b.Title</td>
<td>@b.Genre</td>
<td>@b.Price.ToString("c")</td>
<td>
<NavLink class="btn btn-info btn-sm" 
href="@GetDetailsUrl(b.GameID)">
<i class="fas fa-info"></i>
</NavLink>
<NavLink class="btn btn-warning btn-sm"
href="@GetEditUrl(b.GameID)">
<i class="fa-solid fa-pen-to-square"></i>
</NavLink>  
<button class="btn btn-danger btn-sm"
@onclick="@(e => DeleteGame(b))">
<i class="fa-solid fa-trash"></i>
</button>
</td>
</tr>
}
}
else
{
<tr>
<td colspan="5" class="text-center">No Games</td>
</tr>
}
</tbody></table>
<NavLink class="btn btn-primary" href="/admin/games/create">Create</NavLink>
@code {
public IGameShopWorldRepository Repository => Service;
public IEnumerable<Game> GameData { get; set; }
protected async override Task OnInitializedAsync()
{
await UpdateData();
}
public async Task UpdateData()
{
GameData = await Repository.Games.ToListAsync();
}
public async Task DeleteGame(Game b)
{
Repository.DeleteGame(b);
await UpdateData();
}
public string GetDetailsUrl(long id) => $"/admin/games/details/{id}";
public string GetEditUrl(long id) => $"/admin/games/edit/{id}";
}
